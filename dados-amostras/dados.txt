26 32 36 39 39 41 43 43 43 44 44
25 25.5 25.7 25.8 25.9 26 26.1 26.1 26.2 26.2 26.2
26 35 38 39 42 45 46 46 45 48 48 
30.2 31.2 31.5 31.6 31.8 32 32.1 32.1 32.2 32.3 32.3
25 30 34 36 38 41 42 43 43 44 43
25.1 25.8 26.2 26.4 26.6 26.7 26.8 26.9 27 27.1 27.2
34 36 38 40 41 43 44 44 45 46 46
30.3 30.8 31.1 31.4 31.6 31.7 31.8 31.9 32 32.1 32.1

from scipy.optimize import curve_fit
import matplotlib as mpl
import matplotlib.pyplot as plt
from scipy import interpolate
import numpy as np
dados = input()
itens = dados.split()
Xtemp = list(map(float,itens))
tam= len(Xtemp)
#print(Xtemp)
dados = input()
itens = dados.split()
Yamp = list(map(float,itens))
tam= len(Yamp)
Yref = list(range(0,tam))
#print(Yref)
for i in range(tam):
    Yref[i] = Yamp[i] - Yamp[0]*1.007
print(Yref)
plt.plot(Xtemp, Yref, 'ro')
plt.show()

f1 = interpolate.interp1d(Xtemp, Yref,kind = 'linear')
xnew= np.linspace(Xtemp[0],Xtemp[(tam-1)],1000)
f2 = f1(xnew)
plt.plot(xnew, f1(xnew), '--')
plt.show()
def reta(x, a, b):
    return a*x + b

pars, cov= curve_fit(f=reta,xdata=xnew,ydata=f2,bounds=[-np.inf,np.inf])
A, B= pars[0], pars[1]
#A= round(A,6)
#B= round(B,6)
print("A e B:",A,B)
plt.plot(xnew, reta(xnew, *pars), '-', xnew, f1(xnew), '--')
plt.show()
for i in range(12):
    cDisplay = float(input('Corrente:'))
    if cDisplay == 0:
        break
    temp = float(input('temp:'))
    if temp == 0:
        break
    cCorrigida = cDisplay - (A*temp + B)
    print(cCorrigida)